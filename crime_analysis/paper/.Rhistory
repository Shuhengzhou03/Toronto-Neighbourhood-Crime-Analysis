years <- 2014:2023
assault_data <- data.frame(Year = years, Total_Assaults = assault_per_year)
# Generate the bar plot
ggplot(assault_data, aes(x = Year, y = Total_Assaults)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Year", y = "Total Assaults") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-population-total-assaults
#| fig-cap: "Relationship Between Population Size in 2023 and Total Assaults (2014-2023) in Toronto Neighborhoods"
#### Second Graph ####
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Generate scatter plot
ggplot(data, aes(x = POPULATION_2023, y = TOTAL_ASSAULT)) +
geom_point(color = "blue", alpha = 0.7) +
labs(
x = "Population in 2023",
y = "Total Assaults (2014-2023)") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-total-assault-cases
#| fig-cap: "Total Number of Assault Cases in Toronto Neighborhoods (2014-2023)"
#### First Graph ####
# Calculate the total number of assaults for each year
assault_per_year <- colSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Create a data frame for plotting
years <- 2014:2023
assault_data <- data.frame(Year = years, Total_Assaults = assault_per_year)
# Generate the bar plot
ggplot(assault_data, aes(x = Year, y = Total_Assaults)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Year", y = "Total Assaults") +
theme_minimal()
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
outbreak_cleaned_data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/cleaned_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
outbreak_cleaned_data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/cleaned_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#| label: fig-total-assault-cases
#| fig-cap: "Total Number of Assault Cases in Toronto Neighborhoods (2014-2023)"
#### First Graph ####
# Calculate the total number of assaults for each year
assault_per_year <- colSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Create a data frame for plotting
years <- 2014:2023
assault_data <- data.frame(Year = years, Total_Assaults = assault_per_year)
# Generate the bar plot
ggplot(assault_data, aes(x = Year, y = Total_Assaults)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Year", y = "Total Assaults") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-population-total-assaults
#| fig-cap: "Relationship Between Population Size in 2023 and Total Assaults (2014-2023) in Toronto Neighborhoods"
#### Second Graph ####
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Generate scatter plot
ggplot(data, aes(x = POPULATION_2023, y = TOTAL_ASSAULT)) +
geom_point(color = "blue", alpha = 0.7) +
labs(
x = "Population in 2023",
y = "Total Assaults (2014-2023)") +
theme_minimal()
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/cleaned_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/cleaned_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#| label: fig-total-assault-cases
#| fig-cap: "Total Number of Assault Cases in Toronto Neighborhoods (2014-2023)"
#### First Graph ####
# Calculate the total number of assaults for each year
assault_per_year <- colSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Create a data frame for plotting
years <- 2014:2023
assault_data <- data.frame(Year = years, Total_Assaults = assault_per_year)
# Generate the bar plot
ggplot(assault_data, aes(x = Year, y = Total_Assaults)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Year", y = "Total Assaults") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-population-total-assaults
#| fig-cap: "Relationship Between Population Size in 2023 and Total Assaults (2014-2023) in Toronto Neighborhoods"
#### Second Graph ####
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Generate scatter plot
ggplot(data, aes(x = POPULATION_2023, y = TOTAL_ASSAULT)) +
geom_point(color = "blue", alpha = 0.7) +
labs(
x = "Population in 2023",
y = "Total Assaults (2014-2023)") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-top-ten-assaults-neibourhoods
#| fig-cap: "Top 10 Neighborhoods by Total Assaults in Toronto (2014-2023)"
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Select the top 10 neighborhoods with the most assaults
top10_assault <- data[order(-data$TOTAL_ASSAULT), ][1:10, ]
# Create a bar plot for the top 10 neighborhoods with the most assaults
ggplot(top10_assault, aes(x = reorder(AREA_NAME, -TOTAL_ASSAULT), y = TOTAL_ASSAULT)) +
geom_bar(stat = "identity", fill = "tomato") +
labs(x = "Neighborhood", y = "Total Assaults") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Rotate x-axis labels for readability
plot.title = element_text(hjust = 0.5))  # Center the title
top10_assault
#| echo: false
#| warning: false
#| label: fig-top-ten-assaults-neibourhoods
#| fig-cap: "Top 10 Neighborhoods by Total Assaults in Toronto (2014-2023)"
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Select the top 10 neighborhoods with the most assaults
top10_assault <- data[order(-data$TOTAL_ASSAULT), ][1:10, ]
# Create a bar plot for the top 10 neighborhoods with the most assaults
ggplot(top10_assault, aes(x = reorder(AREA_NAME, -TOTAL_ASSAULT), y = TOTAL_ASSAULT)) +
geom_bar(stat = "identity", fill = "tomato") +
labs(x = "Neighborhood", y = "Total Assaults") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Rotate x-axis labels for readability
plot.title = element_text(hjust = 0.5))  # Center the title
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/cleaned_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#| label: fig-total-assault-cases
#| fig-cap: "Total Number of Assault Cases in Toronto Neighborhoods (2014-2023)"
#### First Graph ####
# Calculate the total number of assaults for each year
assault_per_year <- colSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Create a data frame for plotting
years <- 2014:2023
assault_data <- data.frame(Year = years, Total_Assaults = assault_per_year)
# Generate the bar plot
ggplot(assault_data, aes(x = Year, y = Total_Assaults)) +
geom_bar(stat = "identity", fill = "green") +
labs(x = "Year", y = "Total Assaults") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-population-total-assaults
#| fig-cap: "Relationship Between Population Size in 2023 and Total Assaults (2014-2023) in Toronto Neighborhoods"
#### Second Graph ####
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Generate scatter plot
ggplot(data, aes(x = POPULATION_2023, y = TOTAL_ASSAULT)) +
geom_point(color = "blue", alpha = 0.7) +
labs(
x = "Population in 2023",
y = "Total Assaults (2014-2023)") +
theme_minimal()
#| echo: false
#| warning: false
#| label: fig-top-ten-assaults-neibourhoods
#| fig-cap: "Top 10 Neighborhoods by Total Assaults in Toronto (2014-2023)"
# Create a new column for total assaults from 2014 to 2023
data$TOTAL_ASSAULT <- rowSums(data[, c("ASSAULT_2014", "ASSAULT_2015", "ASSAULT_2016", "ASSAULT_2017",
"ASSAULT_2018", "ASSAULT_2019", "ASSAULT_2020", "ASSAULT_2021",
"ASSAULT_2022", "ASSAULT_2023")])
# Select the top 10 neighborhoods with the most assaults
top10_assault <- data[order(-data$TOTAL_ASSAULT), ][1:10, ]
# Create a bar plot for the top 10 neighborhoods with the most assaults
ggplot(top10_assault, aes(x = reorder(AREA_NAME, -TOTAL_ASSAULT), y = TOTAL_ASSAULT)) +
geom_bar(stat = "identity", fill = "tomato") +
labs(x = "Neighborhood", y = "Total Assaults") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Rotate x-axis labels for readability
plot.title = element_text(hjust = 0.5))  # Center the title
#| echo: false
#| warning: false
# Install necessary packages (if not installed)
install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)
# Retrieve a list of all available data packages from the OpenDataToronto portal
packages <- list_packages(500)
# Display the list of available packages
packages
#| echo: false
#| warning: false
# Install necessary packages (if not installed)
install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)
# Retrieve a list of all available data packages from the OpenDataToronto portal
packages <- list_packages(500)
# Display the list of available packages
packages
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto
marriage_licence_packages <- search_packages("Neighbourhood Crime Rates")
marriage_licence_packages
# Retrieve a list of all resources (datasets) available within the found package
marriage_licence_resources <- marriage_licence_packages %>%
list_package_resources()
# Display the list of resources available in the "Marriage Licence Statistics" package
marriage_licence_resources
# Download the .csv dataset
marriage_licence_statistics <- marriage_licence_resources[8,] %>%
get_resource()
marriage_licence_statistics
# Download the .csv dataset
marriage_licence_statistics <- marriage_licence_resources[8,] %>%
get_resource()
marriage_licence_statistics
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto
marriage_licence_packages <- search_packages("Neighbourhood Crime Rates")
marriage_licence_packages
# Retrieve a list of all resources (datasets) available within the found package
marriage_licence_resources <- marriage_licence_packages %>%
list_package_resources()
# Display the list of resources available in the "Marriage Licence Statistics" package
marriage_licence_resources
marriage_licence_statistics
write_csv(marriage_licence_statistics,"/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/raw_data")
marriage_licence_statistics
write_csv(marriage_licence_statistics,"/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/raw_data.csv")
marriage_licence_statistics
write_csv(marriage_licence_statistics,"/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/raw_data.csv")
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto
crime_packages <- search_packages("Neighbourhood Crime Rates")
crime_packages
# Retrieve a list of all resources (datasets) available within the found package
crime_resources <- crime_packages %>%
list_package_resources()
# Display the list of resources available in the "Marriage Licence Statistics" package
crime_resources
# Download the .csv dataset
crime_statistics <- crime_resources[8,] %>%
get_resource()
#| echo: false
#| warning: false
#### Preamble ####
# Purpose: Generates a paper titled "A Study on Assault Crime Rates in Toronto Neighborhoods (2014-2023)" in PDF format when
# rendered.
# Author: Jack Zhou
# Date: September 27, 2024
# Contact: shuheng.zhou@mail.utoronto.ca
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("lintr")
#install.packages("styler")
library(tidyverse)
library(ggplot2)
library(lintr)
library(styler)
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("lintr")
#install.packages("styler")
library(tidyverse)
library(ggplot2)
library(lintr)
library(styler)
library(lintr)
library(styler)
library(lintr)
library(styler)
library(janitor)
library(tidyverse)
library(lintr)
library(styler)
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("lintr")
#install.packages("styler")
library(tidyverse)
library(ggplot2)
library(lintr)
library(styler)
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv(here::here("/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1/data/analysis_data/Cleaned_Data.csv"))
#| echo: false
#| warning: false
#### Loading Packages ####
# install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("lintr")
#install.packages("styler")
library(tidyverse)
library(ggplot2)
library(lintr)
library(styler)
library(styler)
crime_data <- read.csv(data_resource$download_url)
library(opendatatoronto)
library(tidyverse)
# Find the dataset by its unique package ID or name
# Example: "Neighbourhood Crime Rates" dataset
# Get the list of resources available for the dataset
crime_data_package <- search_packages("Neighbourhood Crime Rates")[[1]]
# List all available resources within the dataset
resources <- list_package_resources(crime_data_package)
write.csv(data, file_path, row.names = FALSE)
# Specify the path where you want to save the CSV file
output_path <- "/Users/shuhengzhou/Desktop/asd/Initial-submission-paper-1/STA304 Paper 1"
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv(here::here("/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv"))
# Install and load necessary packages
# install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)
#### Downloading the Dataset ####
# Replace the search term and dataset name with your dataset's name and file name
raw_data <-
search_packages("Neighbourhood Crime Rates") |>    # Adjust this to the actual dataset you need
list_package_resources() |>
filter(name == "Neighbourhood Crime Rates.csv") |>  # Replace this with the exact CSV name in the resource
get_resource()
#| echo: false
#| warning: false
# Install necessary packages (if not installed)
install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)
# Retrieve a list of all available data packages from the OpenDataToronto portal
packages <- list_packages(500)
# Display the list of available packages
packages
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto by keyword ("Marriage Licence Statistics")
marriage_licence_packages <- search_packages("Neighbourhood Crime Rates")
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto by keyword ("Marriage Licence Statistics")
marriage_licence_packages <- search_packages("Toronto Open Data Intake")
#| echo: false
#| warning: false
# Install necessary packages (if not installed)
install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)
# Retrieve a list of all available data packages from the OpenDataToronto portal
packages <- list_packages(500)
# Display the list of available packages
packages
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto by keyword ("Marriage Licence Statistics")
marriage_licence_packages <- search_packages("Neighbourhood Crime Rates")
marriage_licence_packages
# Retrieve a list of all resources (datasets) available within the found package
marriage_licence_resources <- marriage_licence_packages %>%
list_package_resources()
# Display the list of resources available in the "Marriage Licence Statistics" package
marriage_licence_resources
library(opendatatoronto)
library(tidyverse)
#### Downloading the Dataset ####
# Replace the search term and dataset name with your dataset's name and file name
raw_data <-
search_packages("Neighbourhood Crime Rates") |>    # Adjust this to the actual dataset you need
list_package_resources() |>
filter(name == "neighbourhood-crime-rates - 4326.csv") |>  # Replace this with the exact CSV name in the resource
get_resource()
#### Saving the Dataset ####
write_csv(raw_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/raw_data/raw_data.csv")
library(opendatatoronto)
library(tidyverse)
#### Downloading the Dataset ####
# Replace the search term and dataset name with your dataset's name and file name
raw_data <-
search_packages("Neighbourhood Crime Rates") |>    # Adjust this to the actual dataset you need
list_package_resources() |>
filter(name == "neighbourhood-crime-rates - 4326.csv") |>  # Replace this with the exact CSV name in the resource
get_resource()
#### Saving the Dataset ####
write_csv(raw_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/raw_data/raw_data.csv")
# Save the cleaned data
write.csv(cleaned_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_data.csv", row.names = FALSE)
# Save the cleaned data
write.csv(cleaned_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_data.csv", row.names = FALSE)
# Save the cleaned data
write.csv(cleaned_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv", row.names = FALSE)
# Load necessary library
library(dplyr)
library(tidyverse)
# Read the raw data
raw_data <- read.csv("/Users/shuhengzhou/Desktop/crime_analysis/data/raw_data/raw_data.csv")
# Select and reorder the relevant columns
cleaned_data <- raw_data %>%
select(POPULATION_2023, ASSAULT_2014, ASSAULT_2015, ASSAULT_2016,
ASSAULT_2017, ASSAULT_2018, ASSAULT_2019, ASSAULT_2020,
ASSAULT_2021, ASSAULT_2022, ASSAULT_2023, AREA_NAME)
# Save the cleaned data
write.csv(cleaned_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv", row.names = FALSE)
# Load necessary library
library(dplyr)
library(tidyverse)
# Read the raw data
raw_data <- read.csv("/Users/shuhengzhou/Desktop/crime_analysis/data/raw_data/raw_data.csv")
# Select and reorder the relevant columns
cleaned_data <- raw_data %>%
select(POPULATION_2023, ASSAULT_2014, ASSAULT_2015, ASSAULT_2016,
ASSAULT_2017, ASSAULT_2018, ASSAULT_2019, ASSAULT_2020,
ASSAULT_2021, ASSAULT_2022, ASSAULT_2023, AREA_NAME)
# Save the cleaned data
write.csv(cleaned_data, "/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv", row.names = FALSE)
#| echo: false
#| warning: false
#| message: false
#### Loading the Dataset ####
data <- read_csv("/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv")
library(tidyverse)
# Load the cleaned dataset
cleaned_data <- read_csv("/Users/shuhengzhou/Desktop/crime_analysis/data/analysis_data/Cleaned_Data.csv")
#### Running the tests ####
# 1. Checking that AREA_NAME is of character type
class(cleaned_data$AREA_NAME) == "character"
# 2. Checking that population and assault counts are non-negative
all(cleaned_data$POPULATION_2023 >= 0)
all(cleaned_data$ASSAULT_2014 >= 0)
all(cleaned_data$ASSAULT_2015 >= 0)
all(cleaned_data$ASSAULT_2016 >= 0)
all(cleaned_data$ASSAULT_2017 >= 0)
all(cleaned_data$ASSAULT_2018 >= 0)
all(cleaned_data$ASSAULT_2019 >= 0)
all(cleaned_data$ASSAULT_2020 >= 0)
all(cleaned_data$ASSAULT_2021 >= 0)
all(cleaned_data$ASSAULT_2022 >= 0)
all(cleaned_data$ASSAULT_2023 >= 0)
# 3. Checking that AREA_NAME has unique values
length(unique(cleaned_data$AREA_NAME)) == nrow(cleaned_data)
